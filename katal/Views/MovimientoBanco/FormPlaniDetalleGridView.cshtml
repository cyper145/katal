

@{
    var gridView = Html.DevExpress().GridView(gridViewSettings =>
    {
        
        gridViewSettings.KeyFieldName = "DetKey";

        gridViewSettings.Name = "gvPlanillaDetalle";
        gridViewSettings.CallbackRouteValues = new { Controller = "MovimientoBanco", Action = "FormPlaniDetalleGridView" };
        gridViewSettings.CustomActionRouteValues = new { Controller = "MovimientoBanco", Action = "GridViewCustomActionPartial" };
        gridViewSettings.SettingsEditing.AddNewRowRouteValues = new { Controller = "MovimientoBanco", Action = "RequisicionAddNewPartial" };
        gridViewSettings.SettingsEditing.UpdateRowRouteValues = new { Controller = "MovimientoBanco", Action = "RequisicionUpdatePartial" };


        gridViewSettings.EnablePagingGestures = AutoBoolean.False;

        gridViewSettings.ControlStyle.CssClass = "grid-view";
        gridViewSettings.Width = Unit.Percentage(100);

        gridViewSettings.Styles.Cell.Wrap = DefaultBoolean.False;
        gridViewSettings.Styles.PagerBottomPanel.CssClass = "pager";
        gridViewSettings.Styles.FocusedRow.CssClass = "focused";

        gridViewSettings.SettingsBehavior.AllowFocusedRow = true;
        gridViewSettings.SettingsBehavior.AllowSelectByRowClick = true;
        gridViewSettings.SettingsBehavior.AllowEllipsisInText = true;
        gridViewSettings.SettingsBehavior.AllowDragDrop = false;

        gridViewSettings.SettingsSearchPanel.CustomEditorName = "searchButtonEdit";

        gridViewSettings.SettingsEditing.Mode = GridViewEditingMode.PopupEditForm;
        gridViewSettings.SettingsEditing.EditFormColumnCount = 2;

        gridViewSettings.SettingsSearchPanel.CustomEditorName = "searchButtonEdit";

        gridViewSettings.Settings.VerticalScrollBarMode = ScrollBarMode.Hidden;
        gridViewSettings.Settings.HorizontalScrollBarMode = ScrollBarMode.Auto;
        gridViewSettings.Settings.ShowHeaderFilterButton = true;

        gridViewSettings.SettingsPager.PageSize = 5;
        gridViewSettings.SettingsPager.EnableAdaptivity = true;

        gridViewSettings.SettingsPager.PageSizeItemSettings.Visible = true;

        gridViewSettings.SettingsExport.EnableClientSideExportAPI = true;
        gridViewSettings.SettingsExport.ExportSelectedRowsOnly = true;

        gridViewSettings.EditFormLayoutProperties.Items.AddCommandItem(itemSettings =>
        {
            itemSettings.HorizontalAlign = FormLayoutHorizontalAlign.Right;
        });

        gridViewSettings.CommandColumn.Visible = true;
        gridViewSettings.CommandColumn.ShowSelectCheckbox = true;
        gridViewSettings.CommandColumn.SelectAllCheckboxMode = GridViewSelectAllCheckBoxMode.AllPages;
        gridViewSettings.CommandColumn.VisibleIndex = 0;
        gridViewSettings.CommandColumn.Width = Unit.Pixel(52);

        gridViewSettings.Columns.Add(column =>
        {
            column.FieldName = "DetKey";
            column.Visible = false;

        });
        gridViewSettings.Columns.Add(column =>
        {
            column.FieldName = "Sec";
            column.Caption = "Sec.";
            column.ColumnType = MVCxGridViewColumnType.TextBox;

        });
        gridViewSettings.Columns.Add(column =>
        {
            column.FieldName = "Cliente";
            column.Caption = "Cliente";
            column.ColumnType = MVCxGridViewColumnType.TextBox;
            column.Width = Unit.Pixel(120);

        });
        gridViewSettings.Columns.Add(column =>
        {
            column.FieldName = "TpoDoc";
            column.Caption = "TpoDoc.";
            column.ColumnType = MVCxGridViewColumnType.TextBox;
        });
        gridViewSettings.Columns.Add(column =>
        {
            column.FieldName = "Documento";
            column.Caption = "Documento";
            column.ColumnType = MVCxGridViewColumnType.TextBox;
            column.Width = Unit.Pixel(120);
        });
        gridViewSettings.Columns.Add(column =>
        {
            column.FieldName = "NroOP";
            column.Caption = "Nro. OP";
            column.ColumnType = MVCxGridViewColumnType.TextBox;
        });
        gridViewSettings.Columns.Add(column =>
        {
            column.FieldName = "Banco";
            column.Caption = "Banco";
            column.ColumnType = MVCxGridViewColumnType.TextBox;
        });
        gridViewSettings.Columns.Add(column =>
        {
            column.FieldName = "Moneda";
            column.Caption = "Moneda";
            column.ColumnType = MVCxGridViewColumnType.TextBox;
        });
        gridViewSettings.Columns.Add(column =>
        {
            column.FieldName = "Importe";
            column.Caption = "Importe";
            column.ColumnType = MVCxGridViewColumnType.TextBox;
            var comboBoxProperties = column.PropertiesEdit as TextBoxProperties;
            comboBoxProperties.DisplayFormatString = "F2";

        });
        gridViewSettings.ClientSideEvents.Init = "initDetalle";
        //gridViewSettings.ClientSideEvents.Init = "onGridViewInit";
        gridViewSettings.ClientSideEvents.SelectionChanged = "onGridViewSelectionChangedCmov";
        gridViewSettings.ClientSideEvents.BeginCallback = "onGridViewBeginCallback";


        gridViewSettings.CellEditorInitialize = (s, e) =>
        {
            ((ASPxEdit)e.Editor).ValidationSettings.Display = Display.Dynamic;
        };
    });
    if (ViewBag.GeneralError != null)
    {
        gridView.SetEditErrorText(ViewBag.GeneralError);
    }
}

@gridView.Bind(Model).GetHtml()


