
@using katal.conexion.model.entity
@using katal.Model;
@(Html.DevExpress().GridView(settings => {
    settings.Name = "grid";
    settings.CallbackRouteValues = new { Controller = "MovimientoBanco", Action = "DetailRequestPartial", CB_C_SECUE = ViewData["codigoOrden"] };
    settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "MovimientoBanco", Action = "DetailRequestAddNewPartial" };
    settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "MovimientoBanco", Action = "DetailRequestUpdatePartial" };
    settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "MovimientoBanco", Action = "DetailRequestDeletePartial" };

    settings.SettingsEditing.Mode = GridViewEditingMode.PopupEditForm;
    settings.SettingsPopup.EditForm.SettingsAdaptivity.MaxWidth = 1000;
    settings.SettingsPopup.EditForm.SettingsAdaptivity.Mode = PopupControlAdaptivityMode.Always;
    settings.SettingsPopup.EditForm.SettingsAdaptivity.VerticalAlign = PopupAdaptiveVerticalAlign.WindowCenter;
    settings.Toolbars.Add(tb => {

        tb.Enabled = true;
        tb.Position = GridToolbarPosition.Top;
        tb.SettingsAdaptivity.Enabled = true;
        tb.SettingsAdaptivity.EnableCollapseRootItemsToIcons = true;

        var dr= tb.Items.Add(GridViewToolbarCommand.New);



        tb.Items.Add(GridViewToolbarCommand.Edit);
        tb.Items.Add(GridViewToolbarCommand.Delete);
        tb.Items.Add(i => {
            i.Command = GridViewToolbarCommand.Refresh;
            i.BeginGroup = true;
            i.AdaptivePriority = 2;

        });

    });

    settings.ClientSideEvents.ToolbarItemClick = "OnToolbarDetailClick";

    settings.EnablePagingGestures = AutoBoolean.False;

    settings.ControlStyle.CssClass = "grid-view";


    settings.Styles.Cell.Wrap = DefaultBoolean.False;
    settings.Styles.PagerBottomPanel.CssClass = "pager";
    settings.Styles.FocusedRow.CssClass = "focused";

    settings.SettingsBehavior.AllowFocusedRow = true;
    //    gridViewSettings.SettingsBehavior.AllowSelectByRowClick = true;
    settings.SettingsBehavior.AllowEllipsisInText = true;
    settings.SettingsBehavior.AllowDragDrop = false;


    settings.Settings.ShowHeaderFilterButton = false;

    settings.SettingsPager.PageSize = 50;
    settings.SettingsPager.EnableAdaptivity = true;


    settings.SettingsPopup.EditForm.SettingsAdaptivity.MaxWidth = 900;


    settings.EditFormLayoutProperties.SettingsAdaptivity.AdaptivityMode = FormLayoutAdaptivityMode.SingleColumnWindowLimit;
    settings.EditFormLayoutProperties.SettingsAdaptivity.SwitchToSingleColumnAtWindowInnerWidth = 1000;

    settings.EditFormLayoutProperties.UseDefaultPaddings = false;

    settings.EditFormLayoutProperties.SettingsItemCaptions.Location = LayoutItemCaptionLocation.Top;
    settings.EditFormLayoutProperties.Styles.LayoutGroup.Cell.Paddings.Padding = Unit.Pixel(3);

    settings.EditFormLayoutProperties.Styles.LayoutItem.Paddings.PaddingBottom = Unit.Pixel(8);




    settings.KeyFieldName = "CB_C_SECDE";

    settings.Columns.Add(column =>
    {
        column.FieldName = "CB_C_SECDE";
        column.Caption = "Sec";


    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "CB_C_Concep";
        column.Caption = "Concepto";
        column.Width = Unit.Percentage(35);

    });

    settings.Columns.Add(column =>
    {
        column.FieldName = "CB_C_docum";
        column.Caption = "Documento";
        column.CellRowSpan = 1;



    });
    if (GridViewHelper.monedabanco == "MN")
    {
        settings.Columns.Add(column =>
        {
            column.FieldName = "montomn";
            column.Caption = "Monto";
            column.Width = Unit.Percentage(10);


        });
    }
    else
    {
        settings.Columns.Add(column =>
        {
            column.FieldName = "montome";
            column.Caption = "Monto";
            column.Width = Unit.Percentage(10);
            column.ColumnType = MVCxGridViewColumnType.TextBox;


        });
    }

    settings.Columns.Add(column =>
    {
        column.FieldName = "CB_A_REFERD";
        column.Caption = "Referencia";


    });



    settings.SetEditFormTemplateContent(c =>
    {
        Html.DevExpress().FormLayout(layoutSetting =>
        {
            layoutSetting.Name = "FormLayoutSettingDetalle";
            layoutSetting.Width = Unit.Percentage(100);
            layoutSetting.SettingsAdaptivity.AdaptivityMode = FormLayoutAdaptivityMode.SingleColumnWindowLimit;
            layoutSetting.SettingsAdaptivity.SwitchToSingleColumnAtWindowInnerWidth = 700;
            layoutSetting.UseDefaultPaddings = false;
            var groupItem = layoutSetting.Items.AddGroupItem(groupSettings =>
            {
                groupSettings.Caption = "Nuevo concepto";
                //  groupSettings.ShowCaption = DefaultBoolean.False;
                groupSettings.GroupBoxDecoration = GroupBoxDecoration.Default;
                groupSettings.ColumnCount = 12;
            });
            groupItem.Items.Add(i =>
            {
                i.FieldName = "CB_C_SECDE";
                i.Caption = "Secuencia";
                i.ColumnSpan =4;
                i.NestedExtension().TextBox(t =>
                {
                    t.Properties.ClientSideEvents.Init = "initSecuenciaDetalle";
                    t.ReadOnly = true;
                });
            });
            groupItem.Items.Add(i =>
            {
                i.FieldName = "CB_C_CONCE";
                i.Caption = "Concepto";
                i.ColumnSpan = 5;
                i.SetNestedContent(() =>
                {
                    Html.RenderAction("MultiSelectConceptoCajaBanco", new { CB_C_CODIG = DataBinder.Eval(c.DataItem, "CB_C_CONCE") });
                });
            });
            groupItem.Items.Add(i =>
            {
                i.FieldName = "IS";// se tiene analizar
                i.Caption = "Concepto I/S";
                i.ColumnSpan = 3;
                i.NestedExtension().CheckBox(t =>
                {
                    t.Properties.ClientSideEvents.CheckedChanged = "cambiarES";

                });
            });

            //fila dos
            groupItem.Items.Add(i =>

            {
                i.Name = "TipoAnexo";
                i.Caption = "Anexo";
                i.ColumnSpan = 5;
                i.SetNestedContent(() =>
                {
                    Html.RenderAction("MultiSelectTipoAnexoD" ,new { TIPOANEX_CODIGO = DataBinder.Eval(c.DataItem, "CB_C_ANEXOD") });
                });
            });
            groupItem.Items.Add(i =>

            {
                i.FieldName = "CB_C_ANEXOD";
                i.ShowCaption = DefaultBoolean.False;
                i.ColumnSpan = 7;
                i.SetNestedContent(() =>
                {

                    Html.RenderAction("MultiSelectAnexoD", new { TIPOANEX_CODIGO = DataBinder.Eval(c.DataItem, "CB_C_ANEXOD") });

                });
            });

            groupItem.Items.Add(i =>

            {
                i.FieldName = "CB_C_TPDOCD";
                i.Caption = "Dcmtos.";
                i.ColumnSpan = 5;
                i.SetNestedContent(() =>
                {
                    Html.RenderAction("MultiSelectTipoDocD", new { TIPDOC_CODIGO = DataBinder.Eval(c.DataItem, "CB_C_TPDOCD") });
                });
            });
            groupItem.Items.Add(i =>
            {
                i.FieldName = "serieD";


                i.ShowCaption = DefaultBoolean.False;
                i.ColumnSpan = 1;
                i.NestedExtension().TextBox(t =>
                {
                    t.Properties.ClientSideEvents.KeyDown = "KeyDownSerieD";
                });
            });
            groupItem.Items.Add(i =>
            {

                i.FieldName = "CB_C_DOCUMD";
                i.ShowCaption = DefaultBoolean.False;
                i.ColumnSpan = 2;
                i.NestedExtension().TextBox(t =>
                {
                    t.Properties.ClientSideEvents.KeyDown = "KeyDownDocumD";
                });
            });

            groupItem.Items.Add(i =>
            {

                i.FieldName = "CB_D_FECDC";
                i.ShowCaption = DefaultBoolean.False;
                i.ColumnSpan = 4;
                i.NestedExtension().DateEdit(t =>
                {
                    t.Properties.ClientSideEvents.KeyDown = "KeyDownFecha";
                    t.Properties.ClientSideEvents.Init = "dateInitD";

                });
            });

            groupItem.Items.Add(i =>
            {
                i.Name = "monedaD";
                i.Caption = "Moneda";
                //  i.ShowCaption = DefaultBoolean.False;
                i.ColumnSpan =5;
                i.SetNestedContent(() =>
                {
                    Html.RenderAction("MultiSelectTipoMoneda", new { TIPOMON_CODIGO = DataBinder.Eval(c.DataItem, "monedaD") });
                });
            });

            groupItem.Items.Add(i =>
            {
                i.FieldName = "CB_N_MTOMND";
                i.Caption = "Monto.";
                i.ColumnSpan =3;
                i.NestedExtension().TextBox(t =>
                {
                    t.Properties.ClientSideEvents.KeyDown = "KeyDownMontoD";
                });
            });

            groupItem.Items.Add(i =>
            {
                i.FieldName = "CB_C_CENCO";
                i.Caption = "Centro Ctos";
                //  i.ShowCaption = DefaultBoolean.False;
                i.ColumnSpan = 4;
                i.SetNestedContent(() =>
                {
                    Html.RenderAction("MultiSelectCentroCostos", new { CENCOST_CODIGO = DataBinder.Eval(c.DataItem, "CB_C_CENCO") });
                });
            });
            //MultiSelectCuenta
            groupItem.Items.Add(i =>
            {
                i.FieldName = "CB_C_CUENT";
                i.Caption = "Cuenta";
                //  i.ShowCaption = DefaultBoolean.False;
                i.ColumnSpan = 6;
                i.SetNestedContent(() =>
                {
                    Html.RenderAction("MultiSelectCuenta", new { PLANCTA_CODIGO = DataBinder.Eval(c.DataItem, "CB_C_CUENT") });
                });
            });


            groupItem.Items.Add(i =>
            {
                i.FieldName = "CB_C_DESTI";
                i.Caption = "Cta. Destino";
                //  i.ShowCaption = DefaultBoolean.False;
                i.ColumnSpan = 6;
                i.SetNestedContent(() =>
                {
                    Html.RenderAction("MultiSelectCuentaDestino", new { PLANCTA_CODIGO = DataBinder.Eval(c.DataItem, "CB_C_DESTI") });
                });
            });


            // ultima fila

            groupItem.Items.Add(i =>
            {
                i.FieldName = "CB_A_REFERD";
                i.Caption = "Referencia";
                i.ColumnSpan =12;
                i.NestedExtension().TextBox(t =>
                {

                });
            });

            layoutSetting.Items.Add(itemSettings =>
            {
                itemSettings.ShowCaption = DefaultBoolean.False;
            }).SetNestedContent(() =>
            {
                ViewContext.Writer.Write("<div style='float:right'>");
                Html.DevExpress().Button(
                    btnSettings =>
                    {
                        btnSettings.Name = "btnUpdateDetalle";
                        btnSettings.Text = "Grabar";
                        btnSettings.ClientSideEvents.Click = "function(s, e){ grid.UpdateEdit(); }";

                        //I want to Hide Update Button when FirstName is "John"

                    }).Render();

                Html.DevExpress().Button(
                    btnSettings =>
                    {
                        btnSettings.Name = "btnCancelDetalle";
                        btnSettings.Text = "Cancelar";
                        btnSettings.Style[HtmlTextWriterStyle.MarginLeft] = "5px";
                        btnSettings.ClientSideEvents.Click = "function(s, e){ grid.CancelEdit(); }";
                    }).Render();
                ViewContext.Writer.Write("</div>");
            });
        }).Bind(ViewData["Object"] ?? c.DataItem).Render();

    });


    settings.Settings.ShowFooter = true;
    settings.SettingsBehavior.AutoExpandAllGroups = true;

    // settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Count, "OC_CDESREF").DisplayFormat = "Articulos = {0}";
    //var suma=settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Sum, "OC_NTOTVEN").DisplayFormat = "c";
    //suma.DisplayFormat = "c";
    settings.SettingsSearchPanel.CustomEditorName = "search";
    settings.SettingsBehavior.AllowFocusedRow = true;

    settings.SettingsExport.EnableClientSideExportAPI = true;


    settings.Width = Unit.Percentage(100);

    //DevExpress.Web.Demos.GridViewFeaturesHelper.SetupGlobalGridViewBehavior(settings);
}).Bind(Model).SetEditErrorText(ViewBag.EditError).GetHtml())